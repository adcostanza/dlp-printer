/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:243438:
  println("button1 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button1:243438:

public void job_change(GTextField source, GEvent event) { //_CODE_:job:579833:
  println("textfield1 - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:job:579833:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:894168:
  println("button2 - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:button2:894168:

public void imgButton1_click1(GImageButton source, GEvent event) { //_CODE_:imgButton1:909990:
  println("imgButton1 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton1:909990:

public void imgButton2_click1(GImageButton source, GEvent event) { //_CODE_:imgButton2:479051:
  println("imgButton2 - GImageButton >> GEvent." + event + " @ " + millis());
} //_CODE_:imgButton2:479051:

public void serialToggle_event(GImageToggleButton source, GEvent event) { //_CODE_:serialToggle:411883:
  if(serialToggle.getState() == 1 ) {
      
    try {
      s = new Serial(this, Serial.list()[ser],9600);
      s.write(1);
    } catch (RuntimeException e) {
        e.printStackTrace();
        s.stop();
        serialToggle.setState(0);
    }
    println("Serial turned on");
  } else {
    println("Serial turned off");
    s.stop();
  }
} //_CODE_:serialToggle:411883:

public void serialList_click2(GDropList source, GEvent event) { //_CODE_:serialList:280560:
  println("serialList - GDropList >> GEvent." + event + " @ " + millis());
} //_CODE_:serialList:280560:

public void serialTimer_action(GTimer source) { //_CODE_:serialTimer:982968:
  println("serialTimer - GTimer >> an event occured @ " + millis());
} //_CODE_:serialTimer:982968:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.CYAN_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  label2 = new GLabel(this, -10, 270, 100, 30);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("Serial");
  label2.setTextBold();
  label2.setOpaque(false);
  label3 = new GLabel(this, 40, 310, 100, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("off");
  label3.setOpaque(false);
  label5 = new GLabel(this, 20, 140, 100, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Serial Port");
  label5.setTextBold();
  label5.setOpaque(false);
  button1 = new GButton(this, 380, 290, 170, 90);
  button1.setText("START PRINT");
  button1.setTextBold();
  button1.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  button1.addEventHandler(this, "button1_click1");
  job = new GTextField(this, 20, 90, 100, 20, G4P.SCROLLBARS_NONE);
  job.setText("jobs/");
  job.setOpaque(true);
  job.addEventHandler(this, "job_change");
  button2 = new GButton(this, 190, 290, 180, 90);
  button2.setText("STOP");
  button2.setTextBold();
  button2.setLocalColorScheme(GCScheme.RED_SCHEME);
  button2.addEventHandler(this, "button2_click1");
  label6 = new GLabel(this, 20, 50, 100, 40);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Print Images Directory");
  label6.setTextBold();
  label6.setOpaque(false);
  label7 = new GLabel(this, 600, 90, 100, 20);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("Layer Number:");
  label7.setTextBold();
  label7.setOpaque(false);
  label8 = new GLabel(this, 710, 90, 50, 20);
  label8.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label8.setText("3");
  label8.setOpaque(false);
  label9 = new GLabel(this, 580, 120, 130, 20);
  label9.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label9.setText("Number of Layers:");
  label9.setTextBold();
  label9.setOpaque(false);
  label10 = new GLabel(this, 710, 120, 60, 20);
  label10.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label10.setText("40");
  label10.setOpaque(false);
  label14 = new GLabel(this, 600, 150, 100, 20);
  label14.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label14.setText("Exposure Time:");
  label14.setTextBold();
  label14.setOpaque(false);
  label0001 = new GLabel(this, 570, 180, 130, 20);
  label0001.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label0001.setText("Estimated Total Time:");
  label0001.setTextBold();
  label0001.setOpaque(false);
  label12 = new GLabel(this, 600, 210, 100, 20);
  label12.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label12.setText("Time Elapsed:");
  label12.setTextBold();
  label12.setOpaque(false);
  label11 = new GLabel(this, 170, 50, 120, 20);
  label11.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label11.setText("Current Image:");
  label11.setTextBold();
  label11.setOpaque(false);
  imgButton1 = new GImageButton(this, 190, 90, 360, 180, new String[] { "blank.png", "blank.png", "blank.png" } );
  imgButton1.addEventHandler(this, "imgButton1_click1");
  imgButton2 = new GImageButton(this, 130, 40, 480, 300, new String[] { "out0011.png", "out0011.png", "out0011.png" } );
  imgButton2.addEventHandler(this, "imgButton2_click1");
  serialToggle = new GImageToggleButton(this, 70, 260);
  serialToggle.addEventHandler(this, "serialToggle_event");
  label4 = new GLabel(this, 40, 240, 100, 20);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("on");
  label4.setOpaque(false);
  sketchPad1 = new GSketchPad(this, 360, 170, 80, 60);
  serialList = new GDropList(this, 20, 160, 100, 80, 3);
  serialList.setItems(loadStrings("blank"), 0);
  serialList.addEventHandler(this, "serialList_click2");
  serialTimer = new GTimer(this, this, "serialTimer_action", 1000);
}

// Variable declarations 
// autogenerated do not edit
GLabel label2; 
GLabel label3; 
GLabel label5; 
GButton button1; 
GTextField job; 
GButton button2; 
GLabel label6; 
GLabel label7; 
GLabel label8; 
GLabel label9; 
GLabel label10; 
GLabel label14; 
GLabel label0001; 
GLabel label12; 
GLabel label11; 
GImageButton imgButton1; 
GImageButton imgButton2; 
GImageToggleButton serialToggle; 
GLabel label4; 
GSketchPad sketchPad1; 
GDropList serialList; 
GTimer serialTimer; 